/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package os.gas.station;

import java.util.Random;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Chaos
 */
public class mainframe extends javax.swing.JFrame {
    public static int numofpumps = 0, numofcars = 0;
    /**
     * Creates new form mainframe
     */
    public mainframe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        carsnum = new javax.swing.JTextField();
        pumpsnum = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        submitbutton = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Welcome in the Station");
        setMinimumSize(new java.awt.Dimension(580, 350));
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Welcome in OS Gas Station");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 270, 31);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Enter number of pumps");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 190, 170, 40);

        carsnum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carsnumActionPerformed(evt);
            }
        });
        getContentPane().add(carsnum);
        carsnum.setBounds(390, 110, 183, 30);

        pumpsnum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pumpsnumActionPerformed(evt);
            }
        });
        getContentPane().add(pumpsnum);
        pumpsnum.setBounds(390, 200, 183, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enter number of Cars");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 100, 140, 30);

        submitbutton.setBackground(java.awt.SystemColor.activeCaption);
        submitbutton.setText("Submit");
        submitbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(submitbutton);
        submitbutton.setBounds(150, 260, 110, 23);

        jButton1.setBackground(java.awt.SystemColor.activeCaption);
        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(330, 260, 110, 23);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/os/gas/station/picssources/rsz_1background.jpg"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 0, 580, 330);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pumpsnumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pumpsnumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pumpsnumActionPerformed

    private void carsnumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carsnumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_carsnumActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(null, "Sure you Want To Exit ?", "Leaving ?", JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void submitbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitbuttonActionPerformed
        // TODO add your handling code here:
        
        String nop, noc;
        
        try {
            nop = pumpsnum.getText();
            numofpumps = Integer.parseInt(nop);
            noc = carsnum.getText();
            numofcars = Integer.parseInt(noc);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please Enter the number of Cars and Pumps", "Error", JOptionPane.ERROR_MESSAGE);
        }
        this.dispose();
/*      
        station pumps = new station(numofpumps);
        pumps.pumbs_vec = new Vector();

        this.dispose();
        for (Integer i = 1; i <= numofpumps; i++) {
            String name = "pumb" + i.toString();
            Thread pumb = new Thread(new station(name));
            pumps.pumbs_vec.add(pumb);
            Pumb newpump = new Pumb();
            newpump.setTitle(name);
            pumps.places.add(newpump);
        }

        for (int i = 0; i < numofcars; i++) {
            int m = i + 1;
            int arrive;
            do {
                Random arr_time = new Random();
                arrive = arr_time.nextInt(5000);
            } while (arrive < 0);

            try {
                Thread.sleep(arrive);

            } catch (Exception ex) {
                Logger.getLogger(mainframe.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (pumps.pumbs.availablePermits() == 0) {
                waiting += "C" + m + " ";
                for (int j = 0; j < pumps.places.size(); j++) {
                    pumps.places.get(j).waitL.setText(waiting);
                }
                cars.add(m);
            } else {
                if (pumps.pumbs_vec.size() != 0) {
                    if (cars.size() == 0) {
                        pumps.pumbs_vec.elementAt(0).start();
                        pumps.pumbs_vec.remove(0);
                        try {
                            Thread.sleep(20);
                        } catch (Exception ex) {
                            Logger.getLogger(mainframe.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        pumps.counter++;
                    } else {
                        cars.add(m);
                        waiting += "C " + m;
                        for (int l = 0; l < pumps.places.size(); l++) {
                            pumps.places.get(l).waitL.setText(waiting);
                        }
                        pumps.counter = cars.elementAt(0);
                        pumps.pumbs_vec.elementAt(0).start();
                        pumps.pumbs_vec.remove(0);
                        try {
                            Thread.sleep(20);
                        } catch (Exception ex) {
                            Logger.getLogger(mainframe.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        cars.remove(0);
                        waiting = "";
                        for (int l = 0; l < cars.size(); l++) {
                            waiting += "C " + cars.get(l);
                        }
                        for (int l = 0; l < pumps.places.size(); l++) {
                            pumps.places.get(l).waitL.setText(waiting);
                        }
                        pumps.counter = cars.elementAt(cars.size() - 1);
                        break;
                    }
                }
            }
        }
        while (cars.size() != 0) {
            pumps.counter = cars.elementAt(0);
            if (pumps.pumbs_vec.size() != 0) {
                pumps.pumbs_vec.elementAt(0).start();
                pumps.pumbs_vec.remove(0);
                try {
                    Thread.sleep(200);
                } catch (Exception ex) {
                    Logger.getLogger(mainframe.class.getName()).log(Level.SEVERE, null, ex);
                }
                pumps.counter++;
                cars.remove(0);
                waiting = "";
                for (int l = 0; l < cars.size(); l++) {
                    waiting += "C " + cars.get(l);
                }
                for (int l = 0; l < pumps.places.size(); l++) {
                    pumps.places.get(l).waitL.setText(waiting);
                }
                break;
            }
        }
        while (true) {
            if (pumps.pumbs_vec.size() == numofpumps) {
                break;
            }
        }*/
        
    }//GEN-LAST:event_submitbuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField carsnum;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField pumpsnum;
    private javax.swing.JToggleButton submitbutton;
    // End of variables declaration//GEN-END:variables
}
